//Scripts for MoToLi story pages

//Page global variables
var pgOn; //The number of the page to be displayed
var pgMax; //The total number of pages in the story
var player; //The node for the audio player

//Progress timing global variables
var activeTextNode;	//The text node (single or multi line) matching the audio track
var activeProgNode;	//The progress element currently being updated
var audioActiveTime; //The time an audio track has been running (may span more than one progress bar)
var audioMaxTime;	//Maximum allocated time for the audio track
var audioBarTime;	//The time audio has been running for an individual progress bar
var timerInt; //ID of interval timer, if running
var timerOut; //ID of timeout timer if running
var initStatus = 0;	//Set to -1 if initialisation has already occurred. Needed to overcome multiple onload events in the XOs

function initialise() {
	//Only process if this is the first call. Subsequent calls are ignored.
	if (initStatus != -1) {
		initStatus = -1;
		//Set some global variables
		pgOn = 0;
		pgMax = document.getElementsByClassName("page").length;	
		player = document.getElementById("AudioPlayer");
		audioActiveTime = 0;
		audioBarTime = 0;
		//Get the story name for the footers
		for (i = 0; i < document.getElementsByClassName("title").length; i++) {
			document.getElementsByClassName("title")[i].innerHTML = document.getElementsByTagName("title")[0].innerHTML;
		}
		//Get IDs for the timers so they're not undefined
		timerInt = setInterval(clearInterval(timerInt), 10); 
		timerOut = setTimeout(clearTimeout(timerOut), 10);
		//Set the story format - horizontal or vertical
		setFormat();
		hideEndPageChangeButtons();
		hideAllPages();
		showPage(pgOn);
		activeProgNode = document.getElementById("p" + pgOn).getElementsByClassName("textLine")[0].getElementsByTagName("progress")[0];
		activeProgNode.value = 0;
	}
}

function setFormat() {
	//	Class "underpic" represents text under picture, class "sidepic" means text beside picture
	if (document.getElementById("story").className === "under") {
		for (i = 0; i < document.getElementsByClassName("underpic").length; i++){
			document.getElementsByClassName("underpic")[i].style.display = "block";
		}
		for (i = 0; i < document.getElementsByClassName("sidepic").length; i++){
			document.getElementsByClassName("sidepic")[i].style.display = "none";
		}
	} else {
		for (i = 0; i < document.getElementsByClassName("underpic").length; i++){
			document.getElementsByClassName("underpic")[i].style.display = "none";
		}
		for (i = 0; i < document.getElementsByClassName("sidepic").length; i++){
			document.getElementsByClassName("sidepic")[i].style.display = "block";
		}
	}
}

function pageFwd() {
	AudioPlayer.pause();
	clearTimeout(timerOut);
	clearInterval(timerInt);
	activeProgNode.value = 0;
	pgOn = pgOn + 1;
	if (pgOn > pgMax - 1){pgOn = pgMax - 1};
	hideAllPages();
	showPage(pgOn);
}

function pageBack() {
	AudioPlayer.pause();
	clearTimeout(timerOut);
	clearInterval(timerInt);
	activeProgNode.value = 0;
	if (pgOn > 0){pgOn = pgOn - 1};
	hideAllPages();
	showPage(pgOn);
}

function hideAllPages(){
	var pageID;
	for (i = 0; i < pgMax; i++) {
		pageID = "p" + i;
		document.getElementById(pageID).style.display = "none";
	}
}

function showPage(i) {
	var pagenumber = " ";
	var pageID;
	var textNode;	//the <span> element containing a line of text
	var textLength;	//the length of the text in the textNode, in px
	var progNode;	//the <progress> element corresponding to the textNode
	var lineNodes;	//the set of <td> nodes on the page containing a single line of text
	var wrapNodes;	//the set of <td> nodes on the page containing multiple (wrapped) lines of text	
	var wrapLines;	//the number of text lines in each single wrapNode
	
	pageID = "p" + i;
	if (i > 0) {pagenumber = " pp " + i}; //i.e. don't display it on the title page
	for (j = 0; j < document.getElementsByClassName("pgnum").length; j++) {
		document.getElementsByClassName("pgnum")[j].innerHTML = (pagenumber);
	}
	document.getElementById(pageID).style.display = "block"; //enable the page to be displayed

	//Now set the progress bar lengths for each text line of the page
	//This also sets the first line of a wrapped set, but it will be overwritten subsequently
	lineNodes = document.getElementById(pageID).getElementsByClassName("textLine");
		for (j = 0; j < lineNodes.length; j++) {
			textNode = lineNodes[j].getElementsByTagName("span")[0];  //This is the text whose length we want
			textLength = textNode.offsetWidth;
			progNode = lineNodes[j].getElementsByTagName("progress")[0];  //This is the progress element to be set
			//alert("Setting width to " + textLength);
			progNode.style.width = (textLength + "px");
			//alert("Text line width set to " + progNode.style.width);
			progNode.value = 0;
		}
	//Set the progress bar lengths for each line of any wrapped sets of lines
	wrapNodes = document.getElementById(pageID).getElementsByClassName("wrap");
		for (j = 0; j < wrapNodes.length; j++) {
			//get number of lines for each node
			wrapLines = wrapNodes[j].getElementsByTagName("span").length;
			for (k = 0; k < wrapLines; k++) {
				textNode = wrapNodes[j].getElementsByTagName("span")[k];
				textLength = textNode.offsetWidth;
				progNode = wrapNodes[j].getElementsByTagName("progress")[k];
				progNode.style.width = (textLength + "px");
				progNode.value = 0;
			}
		}
	//Set the first progress node on the page as the active one
	activeProgNode = document.getElementById(pageID).getElementsByClassName("textLine")[0].getElementsByTagName("progress")[0];

	//At this point all progress bars for the page have been set to the correct length and initialised to zero.
	//This is true for the XOs, although they do not display the new status, nor respond when activated.
	//The following action seems to be necessary to kick-start them back to life!
	document.getElementById(pageID).style.display = "block"; //enable the page to be displayed
}

function playAudio(file, time, pageNo, lineNo) {
	var line = lineNo - 1; //index No. of the text cell matching the audio file
	audioMaxTime = (time * 1000);
	var progNodes;		//the set of <progress> nodes on a page
	var wrapLineCount;	//the number of lines of text in a wrapped set (i.e. a paragraph)
	var paragraphLength;	//the length in px of all the text in a paragraph
	var partLength;		//the length in px of a line in a paragraph
	var progNode;		//the specific <progress> element corresponding to a single line in a paragraph
	var maxLineTime; 	//Max time for an individual progress bar (in a wrapped lines paragraph)
	
	//Stop timers and reset page progress bars to zero
	clearTimeout(timerOut);
	clearInterval(timerInt);
	
	//zero all the progress bars on the page
	progNodes = document.getElementById(pageNo).getElementsByTagName("progress");
	for (i = 0; i < progNodes.length; i++) {
		progNodes[i].value = 0;
	}
	//If it's a set of wrapped lines, need to set the max times for each progress bar
	activeTextNode = document.getElementById(pageNo).getElementsByClassName("textLine")[line];
	if (activeTextNode.className === "textLine wrap") {
		//Get the lengths for each progbar, and set the max time for each
		//Get the number of lines:
		wrapLineCount = activeTextNode.getElementsByTagName("progress").length;
		//Get the full paragraph length
		paragraphLength = 0;
		for (i = 0; i < wrapLineCount; i++){
			partLength = parseInt(activeTextNode.getElementsByTagName("progress")[i].style.width);
			paragraphLength = paragraphLength + partLength;
		}
		// Set the proportional times for each line of text
		for (i = 0; i < wrapLineCount; i++){
			progNode = activeTextNode.getElementsByTagName("progress")[i]
			maxLineTime = parseInt(parseInt(progNode.style.width) / paragraphLength * audioMaxTime);
			progNode.max = maxLineTime + 200;	//Add a bit of padding (in msec)
		}
		activeProgNode = activeTextNode.getElementsByTagName("progress")[0];
	} else {
		//No wrapped lines so just set the single progress bar node
		activeProgNode = activeTextNode.getElementsByTagName("progress")[0];
		activeProgNode.max = audioMaxTime;
	}

	//Load and start the audio file
	player.src = file;
	player.play();
	//and start the progress bar
	audioActiveTime = 0;
	startProgBar();
}

function startProgBar() {
	activeProgNode.value = 0;
	audioBarTime = 0;
	//Delay before the interval timerInt starts
	timerOut = setTimeout(function() {timerInt = setInterval(incProgBar, 50);}, 900);
}

function stopProgBar() {
	clearInterval(timerInt);
}

function incProgBar() {
	var progBarNodes;	//the set of <progress> nodes in a multi-line paragraph
	var progCount;		//the number of progBarNodes in a multi-line paragraph
	
	audioActiveTime += 50;
	audioBarTime += 50;
	activeProgNode.value = audioBarTime;
	if (audioBarTime >= activeProgNode.max) {
		//We need to either stop the timer or change to a new bar
		if (audioMaxTime > audioActiveTime) {
			//There is another prog bar to activate
			//Get the list of prog nodes
			progBarNodes = activeTextNode.getElementsByTagName("progress");
			progCount = progBarNodes.length;
			//Find the active node + 1
			var k = -1;
			for (i = progCount; i >= 0; i--) {
				if (activeProgNode === progBarNodes[i]) {
					k = i + 1;
					break;
				}
			}
			//Set the new active node
			if (k != -1) {
				activeProgNode = progBarNodes[k];
				audioBarTime = 0;
				activeProgNode.value = audioBarTime;
			}
		}
		else {
			//There are no more bars to activate, so stop the timer
			clearInterval(timerInt);
		}
	}
	else {
		//Don't do anything, the active bar is still current
	}
}

function hideEndPageChangeButtons() {
	//There are 2 of each back and fwd buttons on every page - 
	//one set for 'text beside' format, and one set for 'text under' format
	//Hide the back buttons on page 0
	var startPageNode = document.getElementById("p0");
	for (i = 0; i < startPageNode.getElementsByClassName("btnback").length; i++) {
		startPageNode.getElementsByClassName("btnback")[i].style.visibility = "hidden";
	}
	//Hide the forward buttons on the last page
	var endpID = "p" + (pgMax - 1);
	var endPageNode = document.getElementById(endpID);
	for (i = 0; i < endPageNode.getElementsByClassName("btnfwd").length; i++) {
		endPageNode.getElementsByClassName("btnfwd")[i].style.visibility = "hidden";
	}
}
